def indexOfLast(string, char):
    index = 0
    for i in range(0, len(string)):
        if string[i: i + 1] == char:
            index = i

    return index


class русКод:
    культурные_слова = {
        # условия
        'типа': "==",
        'меньше': "<",
        'больше': ">",
        'большеравно': ">=",
        'меньшеравно': "<=",
        'неравно': "!=",
        'это': "=",

        # двоеточия
        'то': ":",
        'тогда': ":",
        'делать': ":",

        # ифы и циклы
        'если': "if",
        'илиесли': "elif",
        'иначе': "else :",
        'пока': "while",
        'для': "for",

        # переменные
        'глобал': "global",
        'в': "in",
        'диапазон': "range",
        'правда': "True",
        'ложь': "False",

        # функции
        'функция': "def",
        'вернуть': "return",
        'сказать': "print",
        'вывести': "print",
        'сдохнуть': "exit",
        'из': "from",
        'импорт': "import"
    }

    def __init__(self, режим, табов, файл):
        self.режим = режим
        self.табов = табов
        self.файл = файл

    def транслировать_строку(self, строка):
        культурный_слова = self.культурные_слова
        строка = строка.replace("	", "")
        строка = строка.replace("	", "")
        транслированная_строка = ""
        в_скобке = 0
        в_строке = False
        for слово in строка.split(" "):
            рил_слово = слово
            if ("\"" in слово) and ("\\\"" not in слово):
                if в_строке:
                    в_строке = False
                    слово = слово.split("\"")[1]
                if not в_строке:
                    в_строке = True
                    слово = слово.split("\"")[0]

            if (слово == рил_слово) and (в_строке):
                транслированная_строка += слово + " "
                continue
            слово = слово.replace(" ", "")
            слово = слово.split("(")[0]
            if слово in культурный_слова:
                транслированная_строка += культурный_слова[слово] + " "
            else:
                транслированная_строка += слово + " "
            if "(" in рил_слово:
                в_скобке = в_скобке + 1
                print("+скобка в слове " + рил_слово)
                транслированная_строка += "( " + self.транслировать_строку(
                    рил_слово[рил_слово.index("(") + 1: indexOfLast(рил_слово, ")")])
            if ")" in рил_слово:
                print("-скобка в слове " + рил_слово)
                в_скобке = в_скобке - 1
                транслированная_строка += ")"

        return транслированная_строка

    def транслировать(self):
        код = open(self.файл, 'r', encoding='utf-8')
        print(f"> код = open(self.файл, 'r', encoding='utf-8')")
        культурный_код = ""
        линия = 0
        print("-" * 50)
        for чота in код.readlines():
            линия += 1
            if чота.endswith("\n"):
                чота = чота[0:-1]
            print(f">>{чота}")
            культурный = ""
            if чота.startswith("#"):
                культурный_код += ("	" * self.табов) + чота + "\n"
                continue
            if чота == "":
                культурный_код += ("	" * self.табов) + "\n"
                continue
            for слово in чота.split(" "):
                ориг_слово = слово
                табов = слово.count("	")
                пробелов = слово.count("	")
                self.табов = max(табов, пробелов)
                # слово = слово.replace("	", "")
                культурный += self.транслировать_строку(слово)
            культурный_код += ("	" * self.табов) + культурный + "\n"
        print(f"{'СОХРАНЕНИЕ ФАЙЛА':-^50}")
        выход = open(self.файл + ".py", 'w', encoding='utf-8')
        выход.write(культурный_код)
        выход.close()
        print(f"> выход = open(self.файл + \".py\", 'w', encoding='utf-8')")
        print(f"> выход.write(транслированный_код)")
        print(f"> выход.close()")
        print(f"{'ГОТОВО':-^50}")


файл = input("Введите имя файла: ")
print(f"{'ЗАГРУЗКА ТРАНСЛЯТОРА':-^50}")
транслятор = русКод("файл", 0, f"./{файл}")
print(f'> транслятор = русКод("файл", 0, "./{файл}")')
print(f"{'ТРАНСЛЯЦИЯ КОДА':-^50}")
print(f'> транслятор.транслировать()')
транслятор.транслировать()
