def indexOfLast(string, char):
	index = 0
	for i in range(0, len(string)):
		if string[i : i+1] == char:
			index = i
	return index

class русКод:
	культурные_слова = {
		'равно': "==",
		'меньше': "<",
		'больше': ">",
		'большеравно': "=>",
		'меньшеравно': "=<",
		'то': ":",
		'тогда': ":",
		'делать': ":",
		'если': "if",
		'илиесли': "elif",
		'иначе': "else :",
		'пока': "while",
		'для': "for",
		'глобал': "global",
		'из': "in",
		'диапазон': "range",
		'правда': "True",
		'ложь': "False",
		'функция': "def",
		'вернуть': "return",
		'сказать': "print",
		'вывести': "print",
		'выйим': "exit",
		'это': "=",
		'из': "from",
		'импорт': "import",
		'неравно': "!=",
		';': "\n",
		'строка': "str",
		'число': "int" ,
		'флоут': "float"
	}


	def __init__(self, режим, табов, файл):
		self.режим = режим
		self.табов = табов
		self.файл = файл

	def токенизировать(self, строка):
		токены = []
		#слова = строка.split(" ")
		позиция = -1
		токен = ""
		while позиция < len(строка):
			токен += строка[позиция: позиция + 1]
			позиция+=1
			if строка[позиция : позиция+1] == " ":
				токены.append(токен)
				токен = ""
				continue
			if строка[позиция : позиция+1] in ("\""):
				токены.append(токен)
				токен = ""
				while позиция < len(строка):
					позиция+=1
					токен += строка[позиция : позиция+1]
					if позиция > len(строка):
						print("Неожиданный конец строки!")
						exit()
					if строка[позиция: позиция + 1] in ("\""):
						токены.append("\"" + токен)
						позиция+=1
						токен = ""
						break
			if строка[позиция : позиция+1] in ("("):
				токены.append(токен)
				токен = ""
				while позиция < len(строка):
					позиция+=1
					токен += строка[позиция : позиция+1]
					if позиция > len(строка):
						print("Неожиданный конец строки!")
						exit()
					if строка[позиция: позиция + 1] in (")"):
						токены.append("(" + токен)
						позиция+=1
						токен = ""
						break
			'''
		while i < len(слова):
			слово = слова[i]
			if "\"" in слово:
				буквстрока = "\""
				for словос in строка[слово.index("\"")+1 : -1].split(" "):
					буквстрока += словос + " "
					i+=1
					if "\"" in словос:
						буквстрока = буквстрока[0 : indexOfLast(буквстрока, "\"")]
						break
				слово = буквстрока
				i-=1
			i+=1
			print("===== " + слово)
			токены.append(слово)
			'''
		return токены
	def транслировать_строку(self, строка):
		культурный_слова = self.культурные_слова
		строка =строка.replace("	", "")
		строка =строка.replace("	", "")
		транслированная_строка = ""
		токены = self.токенизировать(строка)
		inparenthis = 0
		for слово in токены:
			скобки = ""
			if слово.startswith("\""): 
				транслированная_строка += слово
				continue
			if "(" in слово:
				транслированная_строка += "(" + self.транслировать_строку((слово + " ")[1:-1]) + ""
				continue
			рил_слово = слово
			слово = слово.replace(" ", "")
			#if len(слово.split(")")) > 1: слово = слово.split(")")[1]
			if слово in культурный_слова:
				транслированная_строка += культурный_слова[слово] + " "
			else:
				транслированная_строка += слово + " "
		return транслированная_строка
	def транслировать(self):
		культурный_слова = self.культурные_слова
		код = open(self.файл, 'r', encoding='utf-8')
		print(f"> код = open(self.файл, 'r', encoding='utf-8')")
		культурный_код = ""
		линия = 0
		print("-"*50)
		for чота in код.readlines():
			линия += 1
			if чота.endswith("\n"):
				чота = чота[0:-1]
			культурный = ""
			if чота.startswith("#"):
				культурный_код += ("	" * self.табов) + чота + "\n"
				continue
			if чота == "":
				культурный_код += "\n"
				continue
			культурный += self.транслировать_строку(чота)
			культурный_код += ("	" * self.табов) + культурный + "\n"
		print(f"{'СОХРАНЕНИЕ ФАЙЛА':-^50}")
		выход = open(self.файл + ".py", 'w', encoding='utf-8')
		выход.write(культурный_код)
		выход.close()
		print(f"> выход = open(self.файл + \".py\", 'w', encoding='utf-8')")
		print(f"> выход.write(транслированный_код)")
		print(f"> выход.close()")

		print(f"{'ГОТОВО':-^50}")


файл = input("Введите имя файла: ")
print(f"{'ЗАГРУЗКА ТРАНСЛЯТОРА':-^50}")
транслятор = русКод("файл", 0, f"./{файл}")
print(f'> транслятор = русКод("файл", 0, "./{файл}")')
print(f"{'ТРАНСЛЯЦИЯ КОДА':-^50}")
print(f'> транслятор.транслировать()')
транслятор.транслировать()

#print(транслятор.транслировать_строку("сказать(тест(1+1), тест(\"amog\"))"))
#print(транслятор.токенизировать("функция факториал(н) то"))
#print(транслятор.транслировать_строку("вывести(\"fadfh\", f)"))
